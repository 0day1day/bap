Missing features:
* CFG Recovery (work in progress)

Disassembly stuff:
* Include symbols in disassembly
* Include section names in disassembly
* Include data?

Design issues:
* Change attributes from attribute list to a set of attribute.
* When optimizing code, try to keep the more meaningful variable names.
* How should we represent functions?

Other:
* Fix up documentation.
* Write more .mli files.
* Redo the patched VEX thing properly. (using a vendor branch)

Bigger projects:
* Add support for AMD64 binaries. (almost done)

Branch specific:
* Depgraphs.ml: Make a separate graph type for depgraphs.ml with
   Lang.exp = unit
* Cfg.mli: How can we make expressions more structured?
* Should we add edge conditions to the visitor?
* Allow recovery algorithm to choose edges to process.  Use this to
   process all non-indirect jumps first.  Then process as many
   indirect jumps at the same time to reduce the number of VSA calls.