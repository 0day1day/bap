- Store additional information in the trace header.
  * (DONE) Will need the base addresses of all modules loaded during the trace.
    + Wonder if there will be any problems with module A unloading and
      module B replacing its address space?

- (DONE) Gather operand information.

- Try to figure out trace file size, and how to cut it down. Refer to iDNA
  again.

- (DONE) Capture syscalls.

- Capture exceptions?

- (DONE) Start working on caches: instruction-address cache, register and
  memory cache.

=================================

gentrace.cpp:

- (DONE) Implement data caching.
- (DONE) Implement keyframes.
- Test to make sure everything is working properly.
- (DONE) Test to see if using different analysis functions for common numbers of
  values will help improve performance. e.g. an analysis function that
  accepts 3 values because majority of instructions only have 3
  values. Will have to determine empirically what is the most common
  number of values.
- (DONE) Trigger points and log limits.
- Add more fast paths.
- (DONE) Implement TOC.
- Handle floating point instructions.
- Handle XMM instructions.
- Make threadsafe!
- Figure out how to log the trigger instruction too.
