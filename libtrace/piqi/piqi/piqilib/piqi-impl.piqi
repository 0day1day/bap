
.include [ .module piqi.org/piqi ]


.extend [
    .name import

    .field [
        .type piqi
        .optional
    ]
]


.variant [
    .name namespace
    .option [ .type piqi ]
    .option [ .type import ]
]


.extend [
    (.name record variant alias list)

    .field [
        .name parent
        .type namespace
        .optional
    ]
]


.extend [
    .name record

    % record's fields ordered by integer wire code
    .field [
        .name wire-field
        .type field
        .repeated
    ]
]


.extend [
    .name piqi

    .field [ .name extended-piqdef .type piqdef .repeated ]
    .field [ .name resolved-piqdef .type piqdef .repeated ]
    .field [ .name imported-piqdef .type piqdef .repeated ]
    .field [ .name resolved-import .type import .repeated ]
    .field [ .name resolved-func .type function .repeated ]
    .field [ .name included-piqi .type piqi .repeated ]

    .field [ .name original-piqi .type piqi .optional ]
]


.extend [
    .name function

    .field [
        .name resolved-input
        .type piqdef
        .optional
    ]

    .field [
        .name resolved-output
        .type piqdef
        .optional
    ]

    .field [
        .name resolved-error
        .type piqdef
        .optional
    ]
]


.extend [
    .name alias
    .field [
        .name is-func-param % if alias is a function parameter
        .optional
    ]
]


.extend [
    .name ast

    % These two token types are used only in several special cases, and can't be
    % represented in Piq text format directly.

    .option [
        % Raw word -- a valid utf8 Piq word: may be parsed as either of these:
        % word, bool, number, string, binary

        .name raw-word
        .type word
    ]
    .option [
        % Raw binary -- just a sequence of bytes: may be parsed as either binary
        % or utf8 string

        .name raw-binary
        .type binary
    ]
]


% Alternative name for field and option. It is used by Piq parse
% (piqobj_of_piqi) if a field or an option can be referred using an alternative
% name. An example of such alternative name can be .getopt-letter defined in
% piqi.org/piqi-getopt.piqi
.extend [
    (.name field option)

    .field [
        .name alt-name
        .type word
        .optional
    ]
]

