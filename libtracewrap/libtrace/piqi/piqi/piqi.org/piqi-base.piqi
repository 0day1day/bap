% Base piqi specification
%
% This file contains the most general piqi specification, i.e. without specific
% extensions.
% 
% Copyright 2009, 2010, 2011 Anton Lavrik


.module piqi.org/piqi-base


.include [ .module piqi.org/piqtype ]
.include [ .module piqi.org/piqtype-wire ]


.custom-field ocaml-name


.record [
    .name piqi

    .field [
        .name module
        .type word
        .optional
        .ocaml-name "modname"
    ]

    .field [
        .name custom-field
        .type word
        .repeated
    ]

    .field [ .type piqdef .repeated ]
    .field [ .type extend .repeated ]
    .field [ .type include .repeated ]
    .field [ .type import .repeated ]
    .field [ .type function .repeated ]
]


.record [
    .name include
    .ocaml-name "includ"

    .field [
        .name module
        .type word
        .ocaml-name "modname"
    ]
]


.record [
    % import <module> as <name>
    .name import

    .field [
        .name module
        .type word
        .ocaml-name "modname"
    ]

    .field [
        .type name
        .optional
    ]
]


.record [
    .name extend

    .field [
        .type name
        .repeated % several typedefs can be specified as an extension
    ]

    .field [
        .ocaml-name "quote"
        .type piq-any % an actual extension object
        .repeated
    ]
]


.record [
    .name function
    .ocaml-name "func"

    .field [ .type name ]

    .field [
        .name input
        .type function-param
        .optional
    ]

    .field [
        .name output
        .type function-param
        .optional
    ]

    .field [
        .name error
        .type function-param
        .optional
    ]
]


.variant [
    .name function-param
    .option [ .type name ]
    .option [
        .name record
        .type anonymous-record
    ]
    .option [
        .name variant
        .type anonymous-variant
    ]
    .option [
        .name enum
        .type anonymous-enum
    ]
    .option [
        .name list
        .type anonymous-list
    ]
    % NOTE: obviously, there's no anonymous alias. At the same time, the "name"
    % option will turn into <function-name>-input|output|error alias
]


% "anonymous-record" is a "record" without a name
.record [
    .name anonymous-record

    .field [
        .type field
        .repeated
    ]
]

.record [
    .name anonymous-variant

    .field [
        .type option
        .repeated
    ]
]

.alias [
    .name anonymous-enum
    .type anonymous-variant
]

.record [
    .name anonymous-list

    .field [ .type type ]
]

