{application, piqi_rpc, [
  {description, "Piqi-RPC"},
  {vsn, git},
  {modules, [
        piqi_rpc,
        piqi_rpc_app,
        piqi_rpc_sup,
        piqi_rpc_runtime,
        piqi_rpc_monitor,
        piqi_rpc_http,
        piqi_rpc_webmachine_resource,
        piqic_erlang_rpc
  ]},
  {registered, [piqi_rpc_monitor, piqi_rpc_sup]},
  {applications, [
        kernel,stdlib,
        piqi,
        crypto,
        mochiweb,
        webmachine
  ]},
  {mod, {piqi_rpc_app, []}},
  {env, [
        % The list of Piqi-RPC services definitions, where each entry has the
        % following format:
        %
        %       {ImplMod, RpcMod, UrlPath}, where
        %
        % `ImplMod` contains implementation of the RPC service defined in
        % `RpcMod`.
        %
        % `RpcMod` is a module generated by "piqic-erlang-rpc" command from a
        % Piqi specification. The module is usually named as "<smth>_piqi_rpc".
        %
        % `UrlPath` is a base URL path of the HTTP resource for the RPC service.
        % For example, if the URL path is set to "bar/foo", then the RPC service
        % will be available at "http://<server>:<port>/bar/foo"
        %
        % Example:
        %
        %       {foo_impl, foo_piqi_rpc, "bar/foo"}
        %
        {rpc_services, []},

        % HTTP server configuration containing both Mochiweb and Webmachine
        % options. These options are passed to Webmachine by calling
        % `mochiweb_webmachine:start/1` which parses Webmachine-specific options
        % and passes the rest of them to `mochiweb_http:start/1`.
        {http_server, [
            % Network interface to listen at; determined by IP address of the
            % interface or 'any' for all interfaces
            {ip, 'any'},

            % Mochiweb HTTP server port
            {port, 8888},

            % TCP connection listen backlog (default = 128)
            % {backlog, 128},
            %
            % Acceptor pool size (default = 16)
            % {acceptor_pool_size, 16},

            % XXX: what about ssl?

            % Webmachine options:
            %
            % NOTE: there's no default for the log directory so it must be
            % defined if at least one of the loggers is enabled
            % {log_dir, "piqi_rpc_log"},
            %
            % NOTE: these two options will interfere with other Webmachine
            % application, use it with extra care or only for testing
            %
            % write "access.log" using Webmachine's default logger
            % {enable_access_logger, true},
            %
            % {enable_perf_logger, true},

            % Erlang local name for the HTTP server
            {name, piqi_rpc_mochiweb}
        ]}
  ]}
]}.

% vim: ft=erlang
