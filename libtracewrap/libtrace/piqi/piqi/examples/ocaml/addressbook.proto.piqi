% This file was generated from "addressbook.proto" using the following command:
%
%     piqi of-proto --normalize addressbook.proto
%
% After conversion, ocaml-name field was added for field "type" in
% "person-phone-name" record. This is necessary because "type" is a keyword in
% OCaml
%
% Another addition is "erlang-type-prefix" top-level property. If we didn't do
% that, all Erlang types and records would be prefixed with "addressbook_". Such
% prefixing is done by default to avoid type and record name conflicts across
% several modules. We don't need prefixes at all for this simple example.

(.custom-field ocaml-name erlang-type-prefix)


.proto-package "tutorial"


.erlang-type-prefix ""


.record [
    .name person
    .field [
        .name name
        .type string
        .code 1
    ]
    .field [
        .name id
        .type proto-int32
        .code 2
    ]
    .field [
        .name email
        .type string
        .optional
        .code 3
    ]
    .field [
        .name phone
        .type person-phone-number
        .repeated
        .code 4
    ]
]

.record [
    .name person-phone-number
    .field [
        .name number
        .type string
        .code 1
    ]
    .field [
        .name type
        .ocaml-name "phone_type"
        .type person-phone-type
        .optional
        .default.home
        .code 2
    ]
]

.enum [
    .name person-phone-type
    .option [
        .name mobile
        .code 0
        .proto-name "person_mobile"
    ]
    .option [
        .name home
        .code 1
        .proto-name "person_home"
    ]
    .option [
        .name work
        .code 2
        .proto-name "person_work"
    ]
]

.record [
    .name address-book
    .field [
        .name person
        .type person
        .repeated
        .code 1
    ]
]
